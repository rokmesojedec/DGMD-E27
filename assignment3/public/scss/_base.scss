// extend class
%headingFontStyle {
    text: {
        shadow: $text-shadow-style;
    }
    font: {
        family: var(--heading-font);
    }
}

body,
html {
    padding: 0;
    margin: 0;
    font: {
        size: var(--base-font-size);
        family: var(--font);
    }
    color: var(--font-color);
}

body {
    margin: calc(var(--unit) * 2);
}

*, ::before, ::after{
    box-sizing: border-box;
}

h1,
h2,
h3,
h4,
h5,
h6 {
    color: color.scale(darken($accent-primary, 65%), $alpha: -13%); // sass function used
    text-transform: capitalize;
    margin: 0;
    margin-bottom: var(--heading-margin);
    // Extend is used here
    @extend %headingFontStyle;
    span {
        margin-right: $unit / 2;
    }
}

.muted{
    color: $muted;
}

@include calcFontScale($tablet-font-scale, $base-font-size, false, false);

#layout {
    width: auto;
    margin: 0 auto;
}

code {
    margin: 0;
    font: {
        family: var(--code-font);
    }
    white-space: pre-wrap;
    font-size: calc(var(--base-font-size) * 0.75);
}

header {
    /*margin-top: 2 * $unit;*/
    h1 {
        letter-spacing: var(--unit);
        text-align: center;
    }
    border: {
        bottom: $border-style;
    }
}

nav {
    ul {
        padding: 0;
        margin: var(--unit) 0 0 0 ;
        li {
            display: inline;
            list-style: none;
            &.selected  {
                a {
                    // mixin use
                    @include gradient($gradient-base-degree, 25%, ($accent-primary, $accent-tertiary, $accent-tertiary));
                    text-transform: capitalize;
                    text-shadow: $link-text-shadow-style;
                }
            }
            a {
                // Extend is used here
                @extend %headingFontStyle;
                padding: var(--unit) calc(2 * var(--unit));
                color: var(--font-color);
                display: block;
                font: {
                    weight: bold;
                    size: scaleValue($base-font-size, $mobile-font-scale, 2);
                }
                text: {
                    decoration: none;
                    transform: lowercase;
                }
            }
        }
    }
}

// lots of nesting demonstrated here
main {

    article {
        // mixin used
        @include rotator(0.5deg);

        .color-scheme span {
            width: var(--unit);
            height: var(--unit);
            border-radius: 50%;
            margin-right: var(--unit);
            display: inline-block;
            vertical-align: middle;
        }

        ul {
            padding-left: 0;
            list-style: none;
            li{
                span{
                    margin: var(--list-item-span-margin) 0;
                }
            }
        }

        h2 {
            margin-top: 0;
        }

        div {
            display: flex;
            padding: 0;
            div {
                img {
                    margin-top: var(--unit);
                    width: 100%;
                }
                display: block;
                width: 100%;
                padding: calc(var(--unit) * 2);
                position: relative;
                z-index: -1;
                margin: 0 calc(var(--unit) * -0.25);
            }
        }

        margin-top: calc(var(--unit) * 2);

        $backgroundSelectors: 
            "4n + 0" ($light-salmon, $mindaro, $mindaro) $accent-primary,
            "4n + 1" ($accent-quaternary, $baby-blue, $accent-tertiary) $accent-secondary,
            "4n + 2" ($baby-blue, $baby-blue, darken($baby-blue, 10%)) darken($orange-yellow-crayola, 5%), // SASS Built in function used
            "4n + 3" ($accent-quaternary, $french-pink, lighten($baby-blue, 6%)) $french-pink; // SASS Built in function used

        // Create a sequence of background for n*0th, n*1th, n*2th, n*3th articles
        $i: 0;
        $overrideBorderColor: null;
        // loop example
        @each $nSelector, $bgColor, $borderColor in $backgroundSelectors {
            &:nth-child(#{$nSelector}) {
                div {
                    border: none;
                    @include gradient($gradient-base-degree * $i, 20%, $bgColor);
                    div {
                        background: none;
                        border: {
                            width: var(--border-width);
                            style: solid;
                        }
                        // if / else
                        @if ($overrideBorderColor) {
                            border-color: $overrideBorderColor;
                        } @else {
                            // SASS Built in function used
                            border-color: color.scale($borderColor, $alpha: -10%);
                        }
                    }
                }
            }
            $i: $i + 1;
        }
    }
}

footer {
    margin: {
        top: var(--unit);
    }
}

.no-margin {
    margin: 0;
}
